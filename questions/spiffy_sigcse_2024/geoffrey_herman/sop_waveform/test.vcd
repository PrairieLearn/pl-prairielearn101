$date
	Tue Jul  4 01:58:44 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! out $end
$var reg 1 " a $end
$var reg 1 # b $end
$var reg 1 $ c $end
$var reg 1 % d $end
$scope module sop1 $end
$var wire 1 " a $end
$var wire 1 # b $end
$var wire 1 $ c $end
$var wire 1 % d $end
$var wire 1 & not_a $end
$var wire 1 ' not_b $end
$var wire 1 ( not_c $end
$var wire 1 ) not_d $end
$var wire 1 ! out $end
$var wire 1 * out_a1 $end
$var wire 1 + out_a2 $end
$var wire 1 , out_a3 $end
$var wire 1 - out_a4 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0-
0,
0+
0*
1)
1(
1'
1&
0%
0$
0#
0"
0!
$end
#10
0)
1%
#20
1)
0(
0%
1$
#30
1!
0)
1*
1%
#40
1+
1!
1)
1(
0*
0'
0%
0$
1#
#50
0!
0+
0)
1%
#60
1!
1,
1)
0(
0%
1$
#70
0!
0,
0)
1%
#80
1)
1(
1'
0&
0%
0$
0#
1"
#90
0)
1%
#100
1)
0(
0%
1$
#110
1!
0)
1-
1%
#120
0!
1)
1(
0-
0'
0%
0$
1#
#130
0)
1%
#140
1)
0(
0%
1$
#150
0)
1%
#160
